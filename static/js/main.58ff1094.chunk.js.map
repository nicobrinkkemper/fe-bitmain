{"version":3,"sources":["redux/actionTypes.js","redux/listOrders/listOrders.js","constants.js","redux/orders/orders.js","OrderBook/OrderBookView/OrderBookView.js","OrderBook/OrderBookController.js","OrderBook/OrderBook.js","redux/configureStore.js","store.js","App.js","serviceWorker.js","index.js"],"names":["LIST_ORDERS_ERROR","LIST_ORDERS_RECEIVED","RESET_LIST_ORDERS_RECEIVED","ADD_ORDER","MATCH_ORDER","TOGGLE_MATCH","listOrdersRequest","type","payload","arguments","length","undefined","resetListOrdersRequest","nextListOrdersRequest","action","url","received","toNumber","val","isNaN","parseInt","urlObj","URL","start","searchParams","get","size","newStart","slowDown","slowDownStr","newSize","concat","origin","nextUrl","request","response","map","listOrdersReceived","listOrdersError","resetListOrdersReceived","listOrdersEpic","action$","merge","pipe","ofType","switchMap","ajax","catchError","err","of","takeUntil","repeat","delayWhen","timer","delay","listOrders","state","ORDER_TYPES","hasQuantity","_ref","quantity","tsDesc","_ref2","_ref3","a","ts","idAsc","_ref4","_ref5","id","isBuy","_ref6","isSell","_ref7","isMatch","_ref8","priceDesc","_ref9","_ref10","price","priceAsc","_ref11","_ref12","selectMatches","createSelector","orders","filter","sort","slice","selectSells","selectBuys","addOrder","toggleMatch","matchOrder","order","_order","Object","objectSpread","toggled","reduce","toConsumableArray","counterOrder","find","counterDeal","_action$payload","Math","min","Date","now","orderResult","counterOrderResult","match","TimeAgo","locale","en","timeAgo","Spinner","show","react_default","createElement","className","MatchInfo","format","OrderBookView","reset","sells","buys","matches","isLoading","href","onClick","key","OrderBookView_Spinner","OrderBookView_MatchInfo","OrderBookController","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","props","_this$props","OrderBook_OrderBookView_OrderBookView","Component","OrderBook","connect","store","dispatch","epicMiddleware","createEpicMiddleware","rootEpic","combineEpics","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","App","es","OrderBook_OrderBook","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58ff1094.chunk.js","sourcesContent":["export const LIST_ORDERS_REQUEST = 'LIST_ORDERS_REQUEST';\r\nexport const LIST_ORDERS_ERROR = 'LIST_ORDERS_ERROR';\r\nexport const LIST_ORDERS_RECEIVED = 'LIST_ORDERS_RECEIVED';\r\nexport const RESET_LIST_ORDERS_REQUEST = 'RESET_LIST_ORDERS_REQUEST';\r\nexport const RESET_LIST_ORDERS_RECEIVED = 'RESET_LIST_ORDERS_RECEIVED';\r\nexport const ADD_ORDER = 'ADD_ORDER';\r\nexport const MATCH_ORDER = 'MATCH_ORDER';\r\nexport const TOGGLE_MATCH = 'TOGGLE_MATCH'","import { LIST_ORDERS_RECEIVED, LIST_ORDERS_ERROR, RESET_LIST_ORDERS_REQUEST, RESET_LIST_ORDERS_RECEIVED, LIST_ORDERS_REQUEST } from '../actionTypes';\r\nimport { ofType } from 'redux-observable';\r\nimport { map, delayWhen, switchMap, takeUntil, repeat, catchError, delay } from 'rxjs/operators';\r\nimport { timer, merge, of } from 'rxjs'\r\nimport { ajax } from 'rxjs/ajax';\r\n\r\n// SELECTORS\r\nconst nextUrl = (url, received) => {\r\n    const toNumber = (val) => !isNaN(parseInt(val)) ? parseInt(val) : 0\r\n    const urlObj = new URL(url)\r\n    const start = toNumber(urlObj.searchParams.get('start'))\r\n    const size = toNumber(urlObj.searchParams.get('size'))\r\n    const newStart = start + received\r\n    const slowDown = !!urlObj.searchParams.get('slowDown') || newStart % size !== 0\r\n    const slowDownStr = slowDown\r\n        ? '&slowDown=true'\r\n        : ''\r\n    const newSize = slowDown ? received + 2 : received\r\n    return `${urlObj.origin}/listOrders?start=${newStart}&size=${newSize}${slowDownStr}`\r\n}\r\n\r\n// ACTIONS\r\nexport const listOrdersRequest = (payload = 'http://localhost:5001/listOrders?start=0&size=100') => {\r\n    return {\r\n        type: LIST_ORDERS_REQUEST,\r\n        payload\r\n    }\r\n};\r\nexport const resetListOrdersRequest = (payload = 'http://localhost:5001/reset') => {\r\n    return {\r\n        type: RESET_LIST_ORDERS_REQUEST,\r\n        payload\r\n    }\r\n};\r\nconst nextListOrdersRequest = action => listOrdersRequest(nextUrl(action.payload.request.url, action.payload.response.length))\r\nconst [listOrdersReceived, listOrdersError, resetListOrdersReceived] = [\r\n    LIST_ORDERS_RECEIVED, LIST_ORDERS_ERROR, RESET_LIST_ORDERS_RECEIVED\r\n]\r\n    .map(\r\n        type => (payload) => (\r\n            {\r\n                type,\r\n                payload\r\n            }\r\n        )\r\n    )\r\n\r\n// EPIC\r\nexport const listOrdersEpic = action$ => {\r\n    return merge(\r\n        action$.pipe(\r\n            ofType(LIST_ORDERS_REQUEST),\r\n            switchMap(\r\n                action => ajax(action.payload).pipe(\r\n                    map(listOrdersReceived),\r\n                    catchError(err => of(listOrdersError(err))),\r\n                )\r\n            ),\r\n            takeUntil(action$.ofType(RESET_LIST_ORDERS_REQUEST)),\r\n            repeat()\r\n        ),\r\n        action$.pipe(\r\n            ofType(LIST_ORDERS_RECEIVED),\r\n            delayWhen(\r\n                action => !!(new URL(action.payload.request.url)).searchParams.get('slowDown')\r\n                    ? timer(2000)\r\n                    : timer(200)\r\n            ),\r\n            map(nextListOrdersRequest),\r\n            takeUntil(action$.ofType(RESET_LIST_ORDERS_REQUEST)),\r\n            repeat()\r\n        ),\r\n        action$.pipe(\r\n            ofType(RESET_LIST_ORDERS_REQUEST),\r\n            switchMap(\r\n                action => ajax(action.payload).pipe(\r\n                    map(resetListOrdersReceived),\r\n                    catchError(err => of(listOrdersError(err))),\r\n                )\r\n            ),\r\n        ),\r\n        action$.pipe(\r\n            ofType(LIST_ORDERS_ERROR),\r\n            delay(2000),\r\n            map(() => resetListOrdersRequest()),\r\n        ),\r\n        action$.pipe(\r\n            ofType(RESET_LIST_ORDERS_RECEIVED),\r\n            map(() => listOrdersRequest()),\r\n        ),\r\n    )\r\n}\r\n\r\n// REDUCER\r\nconst listOrders = (state = false, action) => {\r\n    switch (action.type) {\r\n        case LIST_ORDERS_REQUEST:\r\n        case RESET_LIST_ORDERS_REQUEST:\r\n            return true\r\n        case LIST_ORDERS_RECEIVED:\r\n            return false\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default listOrders;","export const ORDER_TYPES = {\r\n    SELL: 'sell',\r\n    BUY: 'buy',\r\n    MATCH: 'match'\r\n}","import { ADD_ORDER, TOGGLE_MATCH, MATCH_ORDER, LIST_ORDERS_RECEIVED, RESET_LIST_ORDERS_RECEIVED, RESET_LIST_ORDERS_REQUEST } from '../actionTypes';\r\nimport { ORDER_TYPES } from '../../constants';\r\nimport { createSelector } from 'reselect'\r\n// SELECTORS\r\nexport const hasQuantity = ({ quantity }) => quantity > 0\r\nexport const tsDesc = ({ ts: a }, { ts: b }) => b - a\r\nexport const idAsc = ({ id: a }, { id: b }) => a - b\r\nexport const isBuy = ({ type }) => type === ORDER_TYPES.BUY\r\nexport const isSell = ({ type }) => type === ORDER_TYPES.SELL\r\nexport const isMatch = ({ type }) => type === ORDER_TYPES.MATCH\r\nexport const priceDesc = ({ price: a }, { price: b }) => a - b\r\nexport const priceAsc = ({ price: a }, { price: b }) => b - a\r\nconst counterDeal = order => isSell(order)\r\n    ? counterOrder => isBuy(counterOrder) && hasQuantity(counterOrder) && counterOrder.price >= order.price\r\n    : counterOrder => isSell(counterOrder) && hasQuantity(counterOrder) && counterOrder.price <= order.price\r\n\r\nexport const selectMatches = createSelector(\r\n    orders => orders\r\n        .filter(isMatch),\r\n    orders => orders\r\n        .sort(tsDesc)\r\n        .slice(0, 30)\r\n)\r\nexport const selectSells = createSelector(\r\n    orders => orders\r\n        .filter(isSell),\r\n    orders => orders\r\n        .filter(hasQuantity)\r\n        .sort(idAsc)\r\n        .sort(priceAsc)\r\n        .slice(0, 20)\r\n)\r\nexport const selectBuys = createSelector(\r\n    orders => orders\r\n        .filter(isBuy),\r\n    orders => orders\r\n        .filter(hasQuantity)\r\n        .sort(idAsc)\r\n        .sort(priceDesc)\r\n        .slice(0, 20)\r\n)\r\n\r\n// ACTIONS\r\nexport const [addOrder, toggleMatch, matchOrder] = [\r\n    ADD_ORDER, TOGGLE_MATCH, MATCH_ORDER\r\n]\r\n    .map(\r\n        type => payload => (\r\n            {\r\n                type,\r\n                payload\r\n            }\r\n        )\r\n    )\r\n\r\n// EPICS\r\n\r\n// REDUCERS\r\nexport const orders = (state = [], action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_MATCH:{\r\n            const order = action.payload;\r\n            return state.map(\r\n                _order => _order.id === order.id\r\n                    ? { ..._order, toggled: !_order.toggled }\r\n                    : _order\r\n            )\r\n        }\r\n        case RESET_LIST_ORDERS_REQUEST:\r\n        case RESET_LIST_ORDERS_RECEIVED:\r\n            return []\r\n        case LIST_ORDERS_RECEIVED:\r\n            return action.payload.response.map(addOrder).reduce(orders, state)\r\n        case ADD_ORDER:{\r\n            const order = action.payload;\r\n            if(!hasQuantity(order)) return [...state, order]\r\n            const counterOrder = state.find(counterDeal(order))\r\n            if (!counterOrder) return [...state, order]\r\n            return orders(state, matchOrder({order,counterOrder}))\r\n        }\r\n        case MATCH_ORDER:{\r\n            const {order,counterOrder} = action.payload;\r\n            const price = (order.price + counterOrder.price) / 2\r\n            const quantity = Math.min(order.quantity, counterOrder.quantity)\r\n            const ts = Date.now()\r\n            const orderResult = { ...order, quantity: order.quantity - quantity }\r\n            const counterOrderResult = { ...counterOrder, quantity: counterOrder.quantity - quantity }\r\n            const match = {\r\n                id: order.id + '-' + counterOrder.id,\r\n                type: ORDER_TYPES.MATCH,\r\n                orderResult,\r\n                counterOrderResult,\r\n                order,\r\n                counterOrder,\r\n                price,\r\n                quantity,\r\n                ts,\r\n                toggled: false\r\n            }\r\n            const updatedState = [\r\n                ...state.map(\r\n                    _order => _order.id === counterOrder.id\r\n                        ? counterOrderResult\r\n                        : _order\r\n                ),\r\n                match\r\n            ]\r\n            return orders(updatedState, addOrder(orderResult))\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default orders","import { PropTypes } from 'prop-types';\r\nimport React from 'react';\r\nimport './styles.css';\r\nimport TimeAgo from 'javascript-time-ago'\r\nimport en from 'javascript-time-ago/locale/en'\r\nTimeAgo.locale(en)\r\nconst timeAgo = new TimeAgo('en-US')\r\n\r\nconst Spinner = ({ show }) => (\r\n  <div className={`Spinner${show ? ' show' : ''}`}><div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div></div>\r\n)\r\nconst MatchInfo = (match) => (\r\n  <div className=\"MatchInfo\">\r\n    <div className=\"ts\">\r\n      Matched {timeAgo.format(match.ts)}\r\n    </div>\r\n    \r\n    <div>Before:</div>\r\n    <div className={`order ${match.order.type}`}>\r\n      {match.order.quantity}x{match.order.price}btc\r\n    </div>\r\n    <div className={`order ${match.counterOrder.type}`}>\r\n      {match.counterOrder.quantity}x{match.counterOrder.price}btc\r\n    </div>\r\n    <div>After:</div>\r\n    <div className={`order ${match.order.type}`}>\r\n      {match.orderResult.quantity ? match.orderResult.quantity+\"x\"+match.orderResult.price+\"btc\" : \"Depleted\"}\r\n    </div>\r\n    <div className={`order ${match.counterOrder.type}`}>\r\n      {match.counterOrderResult.quantity ? match.counterOrderResult.quantity+\"x\"+match.counterOrderResult.price+\"btc\" : \"Depleted\"}\r\n    </div>\r\n  </div>\r\n)\r\nexport const OrderBookView = ({ reset, sells, buys, matches, isLoading, toggleMatch }) => (\r\n  <div className=\"OrderBook\">\r\n    <div className=\"Orders\">\r\n      <ul id={'buy'}>\r\n        <li id=\"reset-header\" className=\"header\"><a href=\"#reset\" onClick={reset}>Reset</a></li>\r\n        <li id=\"buy-header\" className=\"header\"><span>Buys</span></li>\r\n        {\r\n          buys.map(\r\n            order => (\r\n              <li key={order.id} id={`order-${order.id}`} className=\"order buy\">\r\n                <span className=\"tinyId\">{order.id}</span>\r\n                <span className=\"descriptor\">{order.quantity}x{order.price}btc</span>\r\n              </li>\r\n            )\r\n          )\r\n        }\r\n      </ul>\r\n      <ul id={'sell'}>\r\n        <li id=\"fillsell-header\" className=\"header\"></li>\r\n        <li id=\"sell-header\" className=\"header\"><span>Sells</span></li>\r\n        {\r\n          sells.map(\r\n            order => (\r\n              <li key={order.id} id={`order-${order.id}`} className=\"order sell\">\r\n                <span className=\"tinyId\">{order.id}</span>\r\n                <span className=\"descriptor\">{order.quantity}x{order.price}btc</span>\r\n              </li>\r\n            )\r\n          )\r\n        }\r\n      </ul>\r\n      <ul id={'match'}>\r\n        <li id=\"loading-header\" className=\"header\"><Spinner show={isLoading} /></li>\r\n        <li id=\"match-header\" className=\"header\"><span>Matches</span></li>\r\n        {\r\n          matches.map(\r\n            match => (\r\n              <li onClick={() => toggleMatch(match)}\r\n                key={match.id}\r\n                id={`match-${match.id}`}\r\n                className={`order match${match.toggled ? ' toggled' : ''}`}>\r\n                <div className=\"toggle\">\r\n                  <span className=\"tinyId\">{match.id}</span>\r\n                  <span className=\"descriptor\">{match.quantity}x{match.price}btc</span>\r\n                  {(match.toggled ? <MatchInfo {...match} /> : null)}\r\n                </div>\r\n              </li>\r\n            )\r\n          )\r\n        }\r\n      </ul>\r\n    </div>\r\n  </div>\r\n);\r\nconst orderPropTypes = {\r\n  id: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  type: PropTypes.string,\r\n  price: PropTypes.number,\r\n  quantity: PropTypes.number,\r\n}\r\nconst matchPropTypes = {\r\n  ...orderPropTypes,\r\n  order: PropTypes.shape(orderPropTypes),\r\n  counterOrder: PropTypes.shape(orderPropTypes),\r\n  orderResult: PropTypes.shape(orderPropTypes),\r\n  counterOrderResult: PropTypes.shape(orderPropTypes)\r\n}\r\n\r\nOrderBookView.propTypes = {\r\n  sells: PropTypes.arrayOf(PropTypes.shape(orderPropTypes)).isRequired,\r\n  buys: PropTypes.arrayOf(PropTypes.shape(orderPropTypes)).isRequired,\r\n  matches:  PropTypes.arrayOf(PropTypes.shape(matchPropTypes)).isRequired,\r\n};\r\nexport default OrderBookView;","import React, { Component } from 'react';\r\nimport OrderBookView from './OrderBookView/OrderBookView';\r\n\r\nexport class OrderBookController extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.listOrders()\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      sells,\r\n      buys,\r\n      matches,\r\n      toggleMatch,\r\n      isLoading,\r\n      reset\r\n    } = this.props;\r\n    return (\r\n      <OrderBookView {...{\r\n        sells,\r\n        buys,\r\n        matches,\r\n        toggleMatch,\r\n        isLoading,\r\n        reset\r\n      }} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderBookController;","import { connect } from 'react-redux';\r\nimport { listOrdersRequest, resetListOrdersRequest } from '../redux/listOrders/listOrders';\r\nimport { selectSells, selectBuys, selectMatches, toggleMatch } from '../redux/orders/orders'\r\nimport OrderBookController from './OrderBookController';\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    sells: selectSells(store.orders),\r\n    buys: selectBuys(store.orders),\r\n    matches: selectMatches(store.orders),\r\n    isLoading: store.listOrders,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  listOrders: () => dispatch(listOrdersRequest()),\r\n  toggleMatch: (match) => dispatch(toggleMatch(match)),\r\n  reset: () => dispatch(resetListOrdersRequest())\r\n})\r\n\r\nconst OrderBook = connect(mapStateToProps, mapDispatchToProps)(OrderBookController);\r\nexport default OrderBook;","import { compose, combineReducers } from 'redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { createEpicMiddleware, combineEpics } from 'redux-observable';\r\nimport listOrders, { listOrdersEpic } from './listOrders/listOrders';\r\nimport orders from './orders/orders';\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nexport default function configureStore() {\r\n  const rootEpic = combineEpics(\r\n    listOrdersEpic\r\n  );\r\n  const rootReducer = combineReducers(\r\n    {\r\n      listOrders,\r\n      orders\r\n    }\r\n  );\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(epicMiddleware))\r\n  );\r\n\r\n  epicMiddleware.run(rootEpic);\r\n\r\n  return store;\r\n}\r\n","import configureStore from \"./redux/configureStore\"\r\nexport const store = configureStore()\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport OrderBook from './OrderBook/OrderBook';\nimport { Provider } from 'react-redux'\nimport store from './store';\n\nexport const App = () => (\n  <div className=\"App\">\n    <Provider store={store}><OrderBook /></Provider>\n  </div>\n)\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n// reset()"],"sourceRoot":""}